#!/bin/bash

# Script de prueba detallada para el cierre de caja
# Agosto 2025 - Diagn√≥stico de problemas con el bot√≥n "S√≠, cerrar caja"

echo "üîß Diagn√≥stico detallado del cierre de caja..."
echo "============================================="

cd /Users/richardortiz/workspace/gestion_hotel/laravel12_migracion

# Verificar que la caja est√© abierta
echo "1. Verificando caja abierta..."
CAJA_INFO=$(php artisan tinker --execute="
\$caja = App\Models\Caja::where('estado', true)->first();
if (\$caja) {
    echo 'ID:' . \$caja->id . ':USUARIO:' . \$caja->user_id . ':ESTADO:' . (\$caja->estado ? '1' : '0') . ':SALDO:' . \$caja->saldo_actual;
} else {
    echo 'NO_CAJA';
}")

if [[ "$CAJA_INFO" == "NO_CAJA" ]]; then
    echo "   ‚ùå No hay caja abierta para cerrar"
    exit 1
else
    IFS=':' read -r id_label caja_id usuario_label user_id estado_label estado saldo_label saldo <<< "$CAJA_INFO"
    echo "   ‚úÖ Caja #$caja_id abierta, Usuario: $user_id, Estado: $estado, Saldo: $saldo"
fi

# Verificar usuario autenticado (simulamos que david.ortiz@gmail.com est√° logueado)
echo "2. Verificando permisos del usuario..."
USER_CHECK=$(php artisan tinker --execute="
\$user = App\Models\User::where('email', 'david.ortiz@gmail.com')->first();
\$caja = App\Models\Caja::find($caja_id);
if (\$user && \$caja) {
    echo 'PUEDE_ACTUALIZAR:' . (\$user->can('update', \$caja) ? '1' : '0');
    echo ':ES_PROPIETARIO:' . (\$user->id == \$caja->user_id ? '1' : '0');
    echo ':TIENE_PERMISO:' . (\$user->hasPermissionTo('cerrar caja') ? '1' : '0');
} else {
    echo 'ERROR';
}")

echo "   $USER_CHECK"

# Simular el env√≠o AJAX tal como lo har√≠a el frontend
echo "3. Simulando env√≠o AJAX del cierre de caja..."

# Obtener token CSRF
CSRF_TOKEN=$(php artisan tinker --execute="echo csrf_token();")
echo "   CSRF Token obtenido: ${CSRF_TOKEN:0:10}..."

# Simular el env√≠o POST exacto del formulario
echo "4. Enviando solicitud de cierre de caja..."
HTTP_RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}\nCONTENT_TYPE:%{content_type}" \
    -X PUT \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "X-CSRF-TOKEN: $CSRF_TOKEN" \
    -d "_token=$CSRF_TOKEN" \
    -d "_method=PUT" \
    -d "saldo_final=200.00" \
    -d "observaciones_cierre=Cierre de prueba automatizado" \
    http://localhost:8001/cajas/$caja_id)

echo "$HTTP_RESPONSE"

# Analizar la respuesta
HTTP_STATUS=$(echo "$HTTP_RESPONSE" | grep "HTTP_STATUS:" | cut -d':' -f2)
CONTENT_TYPE=$(echo "$HTTP_RESPONSE" | grep "CONTENT_TYPE:" | cut -d':' -f2)

echo ""
echo "5. An√°lisis de respuesta:"
echo "   HTTP Status: $HTTP_STATUS"
echo "   Content Type: $CONTENT_TYPE"

if [[ "$HTTP_STATUS" == "200" ]]; then
    echo "   ‚úÖ Respuesta exitosa"
elif [[ "$HTTP_STATUS" == "302" ]]; then
    echo "   ‚ö†Ô∏è  Redirecci√≥n - posible problema de autenticaci√≥n"
elif [[ "$HTTP_STATUS" == "422" ]]; then
    echo "   ‚ùå Error de validaci√≥n - revisar campos requeridos"
elif [[ "$HTTP_STATUS" == "500" ]]; then
    echo "   ‚ùå Error interno del servidor"
else
    echo "   ‚ùå Error HTTP $HTTP_STATUS"
fi

# Verificar si la caja se cerr√≥ despu√©s de la prueba
echo "6. Verificando si la caja se cerr√≥..."
CAJA_ESTADO_FINAL=$(php artisan tinker --execute="
\$caja = App\Models\Caja::find($caja_id);
if (\$caja) {
    echo 'ESTADO:' . (\$caja->estado ? 'ABIERTA' : 'CERRADA');
    if (!\$caja->estado) {
        echo ':CERRADA_EN:' . \$caja->fecha_cierre;
    }
} else {
    echo 'NO_ENCONTRADA';
}")

echo "   Estado final: $CAJA_ESTADO_FINAL"

# Verificar logs de Laravel por errores recientes
echo "7. Verificando logs recientes..."
if [[ -f "storage/logs/laravel.log" ]]; then
    RECENT_ERRORS=$(tail -n 20 storage/logs/laravel.log | grep -i "error\|exception" | wc -l)
    echo "   Errores recientes en log: $RECENT_ERRORS"
    if [[ "$RECENT_ERRORS" -gt 0 ]]; then
        echo "   üìã √öltimos errores:"
        tail -n 10 storage/logs/laravel.log | grep -i "error\|exception"
    fi
else
    echo "   ‚ö†Ô∏è  Archivo de log no encontrado"
fi

echo ""
echo "üìã DIAGN√ìSTICO COMPLETO:"
echo "======================="
if [[ "$HTTP_STATUS" == "419" ]]; then
    echo "‚ùå PROBLEMA IDENTIFICADO: Error 419 - Token CSRF mismatch"
    echo "üìù EXPLICACI√ìN: El token CSRF no es v√°lido o ha expirado"
    echo ""
    echo "üîß SOLUCIONES IMPLEMENTADAS:"
    echo "   ‚úÖ Mejorado el manejo de tokens CSRF en el JavaScript"
    echo "   ‚úÖ Agregado sistema de refresh autom√°tico de tokens"
    echo "   ‚úÖ Mejor logging para debugging en consola del navegador"
    echo "   ‚úÖ Manejo espec√≠fico del error 419 con reintento autom√°tico"
    echo ""
    echo "üéØ ESTE ERROR ES NORMAL EN ESTE SCRIPT"
    echo "   (El curl no puede usar la misma sesi√≥n que el navegador)"
else
    if [[ "$HTTP_STATUS" == "200" && "$CAJA_ESTADO_FINAL" == *"CERRADA"* ]]; then
        echo "‚úÖ El sistema de cierre funciona correctamente"
        echo "üîç El problema podr√≠a ser en el frontend (JavaScript)"
    elif [[ "$HTTP_STATUS" == "302" ]]; then
        echo "‚ùå Problema de autenticaci√≥n - el usuario no est√° logueado"
    elif [[ "$HTTP_STATUS" == "422" ]]; then
        echo "‚ùå Error de validaci√≥n - faltan campos o datos incorrectos"
    else
        echo "‚ùå El backend tiene problemas procesando el cierre"
    fi
fi

echo ""
echo "üîß PR√ìXIMOS PASOS PARA PROBAR EN EL NAVEGADOR:"
echo "1. Abrir http://localhost:8001/cajas/1/edit en el navegador"
echo "2. Abrir DevTools (F12) y ver la pesta√±a Console"
echo "3. Ingresar un valor en 'Saldo Final Real' (ej: 200.00)"
echo "4. Hacer clic en 'Cerrar Caja' y confirmar con 'S√≠, cerrar caja'"
echo "5. Observar los logs en la consola que ahora incluyen:"
echo "   - Token CSRF obtenido y su longitud"
echo "   - Fuente del token (meta tag, input hidden, blade)"
echo "   - URL de destino y m√©todo HTTP"
echo "   - Respuesta del servidor con detalles"
echo "6. Si aparece error 419, el sistema intentar√° refrescar el token autom√°ticamente"
echo ""
echo "üö® SI A√öN TIENE PROBLEMAS:"
echo "   - Verificar que el servidor est√© corriendo en puerto 8001"
echo "   - Verificar que el usuario est√© logueado como administrador"
echo "   - Limpiar cookies y cache del navegador"
echo "   - Revisar storage/logs/laravel.log por errores adicionales"
